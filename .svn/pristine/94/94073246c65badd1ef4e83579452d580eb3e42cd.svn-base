package mvc.controllers;

import helper.DownloadAct;
import mvc.service.QueryAnalysisService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * @author: xianlehuang
 * @Description:查询分析
 * @date: 2019/8/8 - 9:51
 */
@Controller
@RequestMapping("/queryAnalysis")
public class QueryAnalysisAction {

    @Autowired
    QueryAnalysisService queryAnalysisService;

    private DownloadAct downloadAct = new DownloadAct();

    //速度曲线报表
    @RequestMapping("/findSpeedCurve")
    @ResponseBody
    public String findSpeedCurve(HttpServletRequest request){
        String msg = queryAnalysisService.findSpeedCurve(request);
        return msg;
    }

    //速度曲线报表导出
    @RequestMapping("/findSpeedCurveExcel")
    @ResponseBody
    public String findSpeedCurveExcel(HttpServletRequest request,HttpServletResponse response) throws IOException {
        String a[] = {"车牌号码", "状态", "速度", "方向", "经度", "纬度","定位时间"};
        String b[] = {"VEHICLE_NUM", "STATE", "SPEED", "DIRECTION", "PX", "PY", "DB_TIME"};
        String gzb = "速度曲线报表";
        List<Map<String, Object>> list = DownloadAct.parseJSON2List2(queryAnalysisService.findSpeedCurve(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //营运记录查询
    @RequestMapping("/findOperationRecord")
    @ResponseBody
    public String findOperationRecord(HttpServletRequest request){
        String msg = queryAnalysisService.findOperationRecord(request);
        return msg;
    }

    //营运记录查询导出
    @RequestMapping("/findOperationRecordExcel")
    @ResponseBody
    public String findOperationRecordExcel(HttpServletRequest request,HttpServletResponse response) throws IOException {
        String a[] = {"车牌号码", "服务资格证号", "上车时间", "下车时间", "营运时间/分钟", "载客里程/公里", "空车里程/公里", "等候时间/秒", "交易类型", "营运金额/元"};
        String b[] = {"CPH", "YINGYUN", "SCSJ", "XCSJ", "YYSJ", "ZKLC","KCLC", "DHSJ", "JIAOYITYPE", "YYJE"};
        String gzb = "营运记录查询";
        List<Map<String, Object>> list = DownloadAct.parseJSON2List(queryAnalysisService.findOperationRecord(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //营运数据统计
    @RequestMapping("/findOperationDataStatistics")
    @ResponseBody
    public String findOperationDataStatistics(HttpServletRequest request){
        String msg = queryAnalysisService.findOperationDataStatistics(request);
        return msg;
    }
    //营运数据统计导出
    @RequestMapping("/findOperationDataStatisticsExcel")
    @ResponseBody
    public String findOperationDataStatisticsExcel(HttpServletRequest request,HttpServletResponse response) throws IOException {
        String a[] = {"公司", "车牌号", "SIM卡号", "营运次数/(次)", "营运金额/(元)", "总里程/(公里)","载客里程/(公里)", "空驶里程/(公里)", "实载率", "载客时间/(分钟)", "载客等候时间/(分钟)"};
        String b[] = {"FGS", "CPHM", "VEHI_SIM", "YYCS", "YYJE", "ZLC","ZKLC", "KSLC", "SZL", "ZKSJ", "ZKDHSJ"};
        String gzb = "营运数据统计";
        List<Map<String, Object>> list = DownloadAct.parseJSON2List(queryAnalysisService.findOperationDataStatistics(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }
    //营运日报
    @RequestMapping("/findOperatingDaily")
    @ResponseBody
    public String findOperatingDaily(HttpServletRequest request){
        String msg = queryAnalysisService.findOperatingDaily(request);
        return msg;
    }
    //营运日报导出
    @RequestMapping("/findOperatingDailyExcel")
    @ResponseBody
    public String findOperatingDailyExcel(HttpServletRequest request,HttpServletResponse response) throws IOException {
        String a[] = {"日期", "总车辆数", "营运车辆数","出车率", "平均周转次数", "平均营收金额","平均实载率", "平均重车时间(分)", "平均等候时间(分)","平均实载里程(公里)", "平均空驶里程(公里)"};
        String b[] = {"DB_TIME", "REPORE_VHIC", "RUN_TAXIS", "RUN_RATE", "RUN_TIMES", "RUN_PROFIT","ACTUAL_LOAD_RATE", "RUN_TIME", "WAITTING_TIME", "ACTUAL_LOAD_MILEAGE", "NO_LOAD_MILEAGE"};
        String gzb = "营运日报";
        List<Map<String, Object>> list = DownloadAct.parseJSON2List2(queryAnalysisService.findOperatingDaily(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //营运月报
    @RequestMapping("/findOperatingMonthlyReport")
    @ResponseBody
    public String findOperatingMonthlyReport(HttpServletRequest request){
        String msg = queryAnalysisService.findOperatingMonthlyReport(request);
        return msg;
    }
    //营运月报导出
    @RequestMapping("/findOperatingMonthlyReportExcel")
    @ResponseBody
    public String findOperatingMonthlyReportExcel(HttpServletRequest request,HttpServletResponse response) throws IOException {
        String a[] = {"日期", "总车辆数", "参与营运车辆数","出车率", "周转总次数", "平均周转次数","平均营收金额", "平均实载率", "平均出车时间(时)","平均重车时间(时)", "平均等候时间(时)", "平均总里程(公里)","平均实载里程(公里)", "平均空驶里程(公里)"};
        String b[] = {"REPORT_TIME", "REPORE_VHICNO", "REPORE_VHIC", "REPORE_RUN_RATE", "REPORE_NO", "REPORE_TURNOVER","REPORE_AMOUNT_REVENUE", "REPORE_ACTUAL_LOADING", "REPORE_CAR_TIME", "REPROE_REVENUE_TIME", "REPORE_WAIT_TIME","REPORE_MILEAGE", "REPORE_ACTUAL_MILEAGE", "REPORE_EMPTY_MILEAGE"};
        String gzb = "营运月报";
        List<Map<String, Object>> list = DownloadAct.parseJSON2List2(queryAnalysisService.findOperatingMonthlyReport(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }
    //违章查询
    @RequestMapping("/findViolation")
    @ResponseBody
    public String findViolation(HttpServletRequest request){
        String msg = queryAnalysisService.findViolation(request);
        return msg;
    }
    //违章查询导出
    @RequestMapping("/findViolationExcel")
    @ResponseBody
    public String findViolationExcel(HttpServletRequest request,HttpServletResponse response) throws IOException {
        String a[] = {"车牌号","公司名称","违章次数","IC卡分值"};//导出列明
        String b[] = {"AUTO_NUM", "COM_NAME", "COUNT1", "IC_SCORE"};
        String gzb = "违章查询";
        List<Map<String, Object>> list = DownloadAct.parseJSON2List2(queryAnalysisService.findViolation(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //消息记录查询
    @RequestMapping("/findMessageRecordQuery")
    @ResponseBody
    public String findMessageRecordQuery(HttpServletRequest request){
        String msg = queryAnalysisService.findMessageRecordQuery(request);
        return msg;
    }
    //消息记录导出
    @RequestMapping("/findMessageRecordQueryExcel")
    @ResponseBody
    public String findMessageRecordQueryExcel(HttpServletRequest request,HttpServletResponse response) throws IOException {
        String a[] = {"消息内容","车牌号码","终端编号","时间"};//导出列明
        String b[] = {"CONTENT","VEHI_NO", "MDT_NO", "DB_TIME"};
        String gzb = "消息记录";
        List<Map<String, Object>> list = DownloadAct.parseJSON2List2(queryAnalysisService.findMessageRecordQuery(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }
    //投诉查询
    @RequestMapping("/findComplaintInquiry")
    @ResponseBody
    public String findComplaintInquiry(HttpServletRequest request){
        String msg = queryAnalysisService.findComplaintInquiry(request);
        return msg;
    }
    //投诉查询导出
    @RequestMapping("/findComplaintInquiryExcel")
    @ResponseBody
    public String findComplaintInquiryExcel(HttpServletRequest request,HttpServletResponse response) throws IOException {
        String a[] = {"投诉人","投诉类型","联系方式","投诉车辆","处理详情","投诉时间","处理时间"};//导出列明
        String b[] = {"CALL_NAME", "BUSINESS_ITEMTYPE_NAME", "CALLER_ID", "VEHICLE_PLATE_NUMBER", "BUSINESS_STATUS_NAME", "ARCHIVE_TIME", "ACCEPT_TIME"};
        String gzb = "投诉查询";
        List<Map<String, Object>> list = DownloadAct.parseJSON2List(queryAnalysisService.findComplaintInquiry(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //维修记录查询
    @RequestMapping("/findMaintenanceRecord")
    @ResponseBody
    public String findMaintenanceRecord(HttpServletRequest request){
        String msg =queryAnalysisService.findMaintenanceRecord(request);
        return msg;
    }

    //维修记录查询导出
    @RequestMapping("/findMaintenanceRecordExcel")
    @ResponseBody
    public String findMaintenanceRecordExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"公司名称","车牌号码","区域","SIM卡号","车主","手机号码","维修类型","故障类型","维修人姓名","维修情况","维修地点","维修费用","维修进度","维修结果","送修时间","完修时间","工号","客户满意度","备注"};//导出列明
        String b[] = {"COMP_NAME","VEHI_NO","AREA_NAME","VEHI_SIM","OWN_NAME","HOME_TEL","RT_TYPE","GZLX","REAL_NAME","RM_MALFUNCTION","RA_ADDR","RR_COST","WXJD","RC_CONTENT","STIME","ETIME","GHAO","HFJG","JFYY"};//导出map中的key
        String gzb = "维修记录查询";//导出sheet名和导出的文件名
        String msg = queryAnalysisService.findMaintenanceRecord(request);
        List<Map<String, Object>> list = DownloadAct.parseJSON2List(msg);
        DownloadAct.download(request,response,a,b,gzb,list);
        return null;
    }
}
