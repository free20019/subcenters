package mvc.controllers;

import com.sun.xml.internal.bind.v2.model.core.ID;
import helper.DownloadAct;
import mvc.service.LetterManagementService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * @author: xianlehuang
 * @Description:函件管理
 * @date: 2019/8/28 - 8:51
 */
@Controller
@RequestMapping("/letterManagement")
public class LetterManagementAction {

    @Autowired
    private LetterManagementService letterManagementService;

    private DownloadAct downloadAct = new DownloadAct();

    //转入,转出申请查询
    @RequestMapping("/findTransferApplication")
    @ResponseBody
    public String findTransferApplication(HttpServletRequest request){
        String msg = letterManagementService.findTransferApplication(request);
        return msg;
    }

    //转入,转出申请导出
    @RequestMapping(value = "/findTransferApplicationExcel")
    @ResponseBody
    public String findTransferApplicationExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"车牌号码","原公司名称","现公司名称","转入时间","申请时间","审核状态","审核时间","审核原因"};//导出列明
        String b[] = {"VEHICLE_NO","OLD_COMPANY","NEW_COMPANY","JOIN_TIME","APPLICATION_TIME","AUDIT_STATUS","AUDIT_TIME","REASON"};//导出map中的key
        String type=request.getParameter("type");
        String gzb = "";//导出sheet名和导出的文件名
        if(type.equals("0")){
            gzb ="车辆转入申请";
        }else if(type.equals("1")){
            gzb	="车辆转出申请";
            a[3]="转出时间";
        }
        List<Map<String, Object>> list= DownloadAct.parseJSON2List2(letterManagementService.findTransferApplication(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //添加转入,转出申请
    @RequestMapping("/addTransferApplication")
    @ResponseBody
    public String addTransferApplication(HttpServletRequest request){
        return letterManagementService.addTransferApplication(request);
    }

    //修改转入,转出申请
    @RequestMapping("/updateTransferApplication")
    @ResponseBody
    public String updateTransferApplication(HttpServletRequest request){
        return letterManagementService.updateTransferApplication(request);
    }

    //删除转入,转出申请
    @RequestMapping("/deleteTransferApplication")
    @ResponseBody
    public String deleteTransferApplication(HttpServletRequest request){
        return letterManagementService.deleteTransferApplication(request);
    }

    //报停申请查询
    @RequestMapping("/findStopApplication")
    @ResponseBody
    public String findStopApplication(HttpServletRequest request){
        String msg = letterManagementService.findStopApplication(request);
        return msg;
    }

    //报停申请导出
    @RequestMapping(value = "/findStopApplicationExcel")
    @ResponseBody
    public String findStopApplicationExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"公司名称","车牌号码","停报时间","停报原因","上报日期","审核状态","审核时间","审核原因"};//导出列明
        String b[] = {"COMPANY_NAME","VEHICLE_NO","STOP_TIME","STOP_REASON","UP_TIME","AUDIT_STATUS","AUDIT_TIME","AUDIT_REASON"};//导出map中的key
        String gzb = "报停申请";//导出sheet名和导出的文件名
        List<Map<String, Object>> list= DownloadAct.parseJSON2List2(letterManagementService.findStopApplication(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //添加报停申请
    @RequestMapping("/addStopApplication")
    @ResponseBody
    public String addStopApplication(HttpServletRequest request){
        return letterManagementService.addStopApplication(request);
    }

    //修改报停申请
    @RequestMapping("/updateStopApplication")
    @ResponseBody
    public String updateStopApplication(HttpServletRequest request){
        return letterManagementService.updateStopApplication(request);
    }

    //删除报停申请
    @RequestMapping("/deleteStopApplication")
    @ResponseBody
    public String deleteStopApplication(HttpServletRequest request){
        return letterManagementService.deleteStopApplication(request);
    }

    //变更申请查询
    @RequestMapping("/findChangeApplication")
    @ResponseBody
    public String findChangeApplication(HttpServletRequest request){
        String msg = letterManagementService.findChangeApplication(request);
        return msg;
    }

    //变更申请导出
    @RequestMapping(value = "/findChangeApplicationExcel")
    @ResponseBody
    public String findChangeApplicationExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"原车牌号码","现车牌号码","申请时间","审核状态","审核时间","审核原因"};//导出列明
        String b[] = {"OLD_VEHICLE_NO","NEW_VEHICLE_NO","APPLY_TIME","AUDIT_STATUS","AUDIT_TIME","AUDIT_REASON"};//导出map中的key
        String gzb = "变更申请";//导出sheet名和导出的文件名
        List<Map<String, Object>> list= DownloadAct.parseJSON2List2(letterManagementService.findChangeApplication(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //添加变更申请
    @RequestMapping("/addChangeApplication")
    @ResponseBody
    public String addChangeApplication(HttpServletRequest request){
        return letterManagementService.addChangeApplication(request);
    }

    //修改变更申请
    @RequestMapping("/updateChangeApplication")
    @ResponseBody
    public String updateChangeApplication(HttpServletRequest request){
        return letterManagementService.updateChangeApplication(request);
    }

    //删除变更申请
    @RequestMapping("/deleteChangeApplication")
    @ResponseBody
    public String deleteChangeApplication(HttpServletRequest request){
        return letterManagementService.deleteChangeApplication(request);
    }

    //数据接入申请查询
    @RequestMapping("/findDataApplication")
    @ResponseBody
    public String findDataApplication(HttpServletRequest request){
        String msg = letterManagementService.findDataApplication(request);
        return msg;
    }

    //数据接入申请导出
    @RequestMapping(value = "/findDataApplicationExcel")
    @ResponseBody
    public String findDataApplicationExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"车号","公司","车型","车辆颜色","燃料类型","终端类型","终端型号","车主姓名","电话号码","白班姓名","夜班姓名","白班电话","夜班电话","申请时间","审核时间","审核人员","审核原因","审核状态"};//导出列明
        String b[] = {"VEHICLE_NO","COMPANY_NAME","VEHICLE_TYPE","VEHICLE_COLOR","FUEL_TYPE","TERMINAL_TYPE","TERMINAL_MODEL","OWNER_NAME","OWNER_PHONE","DAY_PERSON","NIGHT_PERSON","DAY_PHONE","NIGHT_PHONE","APPLICATION_DATE","AUDIT_DATE","REAL_NAME","AUDIT_REASON","AUDIT_STATUS"};//导出map中的key
        String gzb = "数据接入申请";//导出sheet名和导出的文件名
        List<Map<String, Object>> list= DownloadAct.parseJSON2List2(letterManagementService.findDataApplication(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //添加数据接入申请
    @RequestMapping("/addDataApplication")
    @ResponseBody
    public String addDataApplication(HttpServletRequest request){
        return letterManagementService.addDataApplication(request);
    }

    //修改数据接入申请
    @RequestMapping("/updateDataApplication")
    @ResponseBody
    public String updateDataApplication(HttpServletRequest request){
        return letterManagementService.updateDataApplication(request);
    }

    //删除数据接入申请
    @RequestMapping("/deleteDataApplication")
    @ResponseBody
    public String deleteDataApplication(HttpServletRequest request){
        return letterManagementService.deleteDataApplication(request);
    }

    //转入,转出统计
    @RequestMapping("/findTransferStatistics")
    @ResponseBody
    public String findTransferStatistics(HttpServletRequest request){
        String msg = letterManagementService.findTransferStatistics(request);
        return msg;
    }

    //转入,转出统计导出
    @RequestMapping(value = "/findTransferStatisticsExcel")
    @ResponseBody
    public String findTransferStatisticsExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"车牌号码","原公司名称","现公司名称","转入次数"};//导出列明
        String b[] = {"VEHICLE_NO","OLD_COMPANY","NEW_COMPANY","COUNT"};//导出map中的key
        String type=request.getParameter("status");
        String gzb = "";//导出sheet名和导出的文件名
        if(type.equals("0")){
            gzb ="车辆转入统计";
        }else if(type.equals("1")){
            gzb	="车辆转出统计";
            a[3]="转出次数";
        }
        List<Map<String, Object>> list= DownloadAct.parseJSON2List2(letterManagementService.findTransferStatistics(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //报停统计
    @RequestMapping("/findStopStatistics")
    @ResponseBody
    public String findStopStatistics(HttpServletRequest request){
        String msg = letterManagementService.findStopStatistics(request);
        return msg;
    }
    //报停统计导出
    @RequestMapping(value = "/findStopStatisticsExcel")
    @ResponseBody
    public String findStopStatisticsExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"车牌号码","公司名称","报停次数"};//导出列明
        String b[] = {"VEHICLE_NO","COMPANY_NAME","COUNT"};//导出map中的key
        String gzb = "报停统计";//导出sheet名和导出的文件名
        List<Map<String, Object>> list= DownloadAct.parseJSON2List2(letterManagementService.findStopStatistics(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //变更统计
    @RequestMapping("/findChangeStatistics")
    @ResponseBody
    public String findChangeStatistics(HttpServletRequest request){
        String msg = letterManagementService.findChangeStatistics(request);
        return msg;
    }

    //变更统计导出
    @RequestMapping(value = "/findChangeStatisticsExcel")
    @ResponseBody
    public String findChangeStatisticsExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"原车牌号码","现车牌号码","变更次数"};//导出列明
        String b[] = {"OLD_VEHICLE_NO","NEW_VEHICLE_NO","COUNT"};//导出map中的key
        String gzb = "变更统计";//导出sheet名和导出的文件名
        List<Map<String, Object>> list= DownloadAct.parseJSON2List2(letterManagementService.findChangeStatistics(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //爱心业务用车记录查询
    @RequestMapping("/findLoveBusinessVehicleUseRecord")
    @ResponseBody
    public String findLoveBusinessVehicleUseRecord(HttpServletRequest request){
        String msg = letterManagementService.findLoveBusinessVehicleUseRecord(request);
        return msg;
    }

    //爱心业务用车记录导出
    @RequestMapping(value = "/findLoveBusinessVehicleUseRecordExcel")
    @ResponseBody
    public String findLoveBusinessVehicleUseRecordExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"生成时间","录入人员","客户姓名","手机号码","驾驶员姓名","车费金额","调度区域","详细地址","目的地址","用车时间","所派车辆","司机联系方式","SIM卡","所属公司","用车模式","特殊人群","陪同情况","用车需求","附加信息","审核状态","审核时间","审核原因"};//导出列明
        String b[] = {"DB_TIME","COMMIT_PERSON","CUST_NAME","CUST_TEL","JSYXM","CF","DDQY","ADDRESS","DEST_ADDRESS","DISP_TIME","VEHI_NO1","SJDH1","SIM_NUM1","COMP_NAME1","YCMS","TSRQ","PTQK","YCXQ","NOTE","AUDIT_STATUS","AUDIT_DATE","AUDIT_REASON"};//导出map中的key
        String gzb = "爱心业务用车记录";//导出sheet名和导出的文件名
        List<Map<String, Object>> list= DownloadAct.parseJSON2List2(letterManagementService.findLoveBusinessVehicleUseRecord(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //添加爱心业务用车记录
    @RequestMapping("/addLoveBusinessVehicleUseRecord")
    @ResponseBody
    public String addLoveBusinessVehicleUseRecord(HttpServletRequest request){
        return letterManagementService.addLoveBusinessVehicleUseRecord(request);
    }

    //修改爱心业务用车记录
    @RequestMapping("/updateLoveBusinessVehicleUseRecord")
    @ResponseBody
    public String updateLoveBusinessVehicleUseRecord(HttpServletRequest request){
        return letterManagementService.updateLoveBusinessVehicleUseRecord(request);
    }

    //删除爱心业务用车记录
    @RequestMapping("/deleteLoveBusinessVehicleUseRecord")
    @ResponseBody
    public String deleteLoveBusinessVehicleUseRecord(HttpServletRequest request){
        return letterManagementService.deleteLoveBusinessVehicleUseRecord(request);
    }

    //导入爱心业务用车记录
    @RequestMapping("/uploadLoveBusinessVehicleUseRecord")
    @ResponseBody
    public String uploadLoveBusinessVehicleUseRecord(HttpServletRequest request, @RequestParam("file") MultipartFile file){
        String msg = letterManagementService.uploadLoveBusinessVehicleUseRecord(request, file);
        return msg;
    }

    //爱心驾驶员信息管理查询
    @RequestMapping("/findVehicleDiverManagement")
    @ResponseBody
    public String findVehicleDiverManagement(HttpServletRequest request){
        String msg = letterManagementService.findVehicleDiverManagement(request);
        return msg;
    }

    //爱心驾驶员信息管理导出
    @RequestMapping(value = "/findVehicleDiverManagementExcel")
    @ResponseBody
    public String findVehicleDiverManagementExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"姓名","录入人员","性别","出生年月","政治面貌","车号","所属公司","分队名称","班次","交班时间","交班地点","联系方式","燃料类型","资格证号","居住地址","备注"};//导出列明
        String b[] = {"DRIVER_NAME","COMMIT_PERSON","SEX","BIRTH_DATE","POLITICAL_AFFILIATION","VEHICLE_NO","COMPANY_NAME","UNIT_NAME","SHIFTS","SHIFT_TIME","SHIFT_ADDRESS","PHONE","FUEL_TYPE","QUALIFICATION_NUMBER","ADDRESS","REMARKS"};//导出map中的key
        String gzb = "爱心驾驶员信息管理";//导出sheet名和导出的文件名
        List<Map<String, Object>> list= DownloadAct.parseJSON2List2(letterManagementService.findVehicleDiverManagement(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //添加爱心驾驶员信息管理
    @RequestMapping("/addVehicleDiverManagement")
    @ResponseBody
    public String addVehicleDiverManagement(HttpServletRequest request){
        return letterManagementService.addVehicleDiverManagement(request);
    }

    //修改爱心驾驶员信息管理
    @RequestMapping("/updateVehicleDiverManagement")
    @ResponseBody
    public String updateVehicleDiverManagement(HttpServletRequest request){
        return letterManagementService.updateVehicleDiverManagement(request);
    }

    //删除爱心驾驶员信息管理
    @RequestMapping("/deleteVehicleDiverManagement")
    @ResponseBody
    public String deleteVehicleDiverManagement(HttpServletRequest request){
        return letterManagementService.deleteVehicleDiverManagement(request);
    }

    //爱心业务用车记录手机号下拉框
    @RequestMapping("/getSjhmSelect")
    @ResponseBody
    public String getSjhmSelect(HttpServletRequest request){
        return letterManagementService.getSjhmSelect(request);
    }

    //爱心业务用车记录选择手机号后查询该手机号用车信息
    @RequestMapping("/getSjhmInfo")
    @ResponseBody
    public String getSjhmInfo(HttpServletRequest request){
        return letterManagementService.getSjhmInfo(request);
    }

    //企业车辆驾驶员信息管理查询
    @RequestMapping("/findDriverInformationManagement")
    @ResponseBody
    public String findDriverInformationManagement(HttpServletRequest request){
        String msg = letterManagementService.findDriverInformationManagement(request);
        return msg;
    }

    //企业车辆驾驶员信息管理导出
    @RequestMapping(value = "/findDriverInformationManagementExcel")
    @ResponseBody
    public String findDriverInformationManagementExcel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String a[] = {"公司", "分公司", "车牌号码", "车主姓名", "车主电话", "统班、白班电话", "晚班电话", "替班电话", "录入人员", "入库时间"};//导出列明
        String b[] = {"COMPANY_NAME", "BRANCH_OFFICE", "VEHICLE_NO", "OWNER_NAME", "OWNER_PHONE", "DAY_PHONE", "NIGHT_PHONE", "SHIFT_PHONE", "COMMIT_PERSON", "DB_TIME"};//导出map中的key
        String gzb = "企业车辆驾驶员信息管理";//导出sheet名和导出的文件名
        List<Map<String, Object>> list= DownloadAct.parseJSON2List2(letterManagementService.findDriverInformationManagement(request));
        DownloadAct.download(request, response, a, b, gzb, list);
        return null;
    }

    //添加企业车辆驾驶员信息管理
    @RequestMapping("/addDriverInformationManagement")
    @ResponseBody
    public String addDriverInformationManagement(HttpServletRequest request){
        return letterManagementService.addDriverInformationManagement(request);
    }

    //修改企业车辆驾驶员信息管理
    @RequestMapping("/updateDriverInformationManagement")
    @ResponseBody
    public String updateDriverInformationManagement(HttpServletRequest request){
        return letterManagementService.updateDriverInformationManagement(request);
    }

    //删除企业车辆驾驶员信息管理
    @RequestMapping("/deleteDriverInformationManagement")
    @ResponseBody
    public String deleteDriverInformationManagement(HttpServletRequest request){
        return letterManagementService.deleteDriverInformationManagement(request);
    }

    //导入企业车辆驾驶员信息管理
    @RequestMapping("/uploadDriverInformationManagement")
    @ResponseBody
    public String uploadDriverInformationManagement(HttpServletRequest request, @RequestParam("file") MultipartFile file){
        String msg = letterManagementService.uploadDriverInformationManagement(request, file);
        return msg;
    }
}
